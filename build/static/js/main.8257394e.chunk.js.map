{"version":3,"sources":["axios.js","component/Row.jsx","requests.js","component/Banner.jsx","component/App.jsx","index.js"],"names":["instance","axios","create","baseURL","Row","props","useState","movies","setMovies","useEffect","a","get","fetchURL","request","data","fetchData","className","title","map","movie","key","id","isLargeRow","src","poster_path","backdrop_path","alt","name","API_KEY","requests","trending","originals","top_rated","action","comedy","horror","romance","documentaries","Banner","str","n","setMovie","req","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8257394e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// base URL for making the requests to the movie db\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\n// this will work something like this\r\n// suppose I'll make a request to /movies\r\n// instance.get('/movies');\r\n// the url will become like https://api.themoviedb.org/3/movies\r\n// so basically this will append the endpoints with the base url\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"../stylesheet/Row.css\";\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row(props) {\r\n  // here we are going to use state to keep track of movies. those are short term memories.\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  // fetch movies and populate it in empty array\r\n\r\n  // this code will run whenever this component will render on the canvas\r\n  // and the empty array in the second parameter says run once and never run again\r\n  useEffect(() => {\r\n    // so basically what we want to do is to make request to the api whenever\r\n    // this component will be rendered on the screen\r\n\r\n    // since we are making a request to external api, we need to wrap them in async await\r\n\r\n    async function fetchData() {\r\n      const request = await axios.get(props.fetchURL);\r\n      setMovies(request.data[\"results\"]);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [props.fetchURL]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 className=\"title\">{props.title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <img\r\n              key={movie.id}\r\n              className={`row_poster ${props.isLargeRow && \"row_posterLarge\"}`}\r\n              src={`${baseUrl}${\r\n                props.isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"9a1b2f911955ec5cfeba1005d86a3c31\";\r\n\r\nconst requests = {\r\n  trending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  originals: `/discover/tv/?api_key=${API_KEY}&with_networks=213`,\r\n  top_rated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  action: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  comedy: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  horror: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  romance: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  documentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport \"../stylesheet/Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const req = await axios.get(requests.originals);\r\n      setMovie(\r\n        req.data[\"results\"][\r\n          Math.floor(Math.random() * req.data[\"results\"].length - 1)\r\n        ]\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n        \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <p className=\"banner_description\">{truncate(movie?.overview, 150)}</p>\r\n      </div>\r\n      <div className=\"banner_fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport Row from \"./Row\";\r\nimport Banner from \"./Banner\";\r\nimport requests from \"../requests\";\r\nimport \"../stylesheet/App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Banner />\r\n      <Row title=\"Netflix Originals\" fetchURL={requests.originals} isLargeRow />\r\n      <Row title=\"Trending Now\" fetchURL={requests.trending} />\r\n      <Row title=\"Top Rated\" fetchURL={requests.top_rated} />\r\n      <Row title=\"Action Movies\" fetchURL={requests.action} />\r\n      <Row title=\"Comedy Movies\" fetchURL={requests.comedy} />\r\n      <Row title=\"Horror Movies\" fetchURL={requests.horror} />\r\n      <Row title=\"Romance Movies\" fetchURL={requests.romance} />\r\n      <Row title=\"Documentaries\" fetchURL={requests.documentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./component/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}